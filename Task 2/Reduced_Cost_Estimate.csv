Group hierarchy,Region,Service,Upfront,Monthly,First 12 months total,Currency,Configuration summary
"Reduced_Cost_Estimate,US East (N. Virginia),Amazon Elastic IP,0,29.2,350.40,USD,""Number of EC2 instances (16), Number of EIPs per instance (1)"""
Reduced_Cost_Estimate,US East (N. Virginia),Elastic Load Balancing,0,1200.85,14410.20,USD,Number of Application Load Balancers (2)
"Reduced_Cost_Estimate,US East (N. Virginia),Amazon EC2,0,2484.45,29813.40,USD,""Operating system (Linux), Quantity (16), Storage for each EC2 instance (General Purpose SSD (gp2)), Storage amount (30 GB), Instance type (t3.2xlarge)"""
Reduced_Cost_Estimate,US East (N. Virginia),Amazon Virtual Private Cloud (VPC),0,77.85,934.20,USD,Number of NAT Gateways (1)
"Reduced_Cost_Estimate,US East (N. Virginia),Amazon RDS for MySQL,0,1286.152,15433.82,USD,""Quantity (2), Storage for each RDS instance (General Purpose SSD (gp2)), Storage amount (30 GB), Instance type (db.m5.4xlarge)"""
"Reduced_Cost_Estimate,US East (N. Virginia),Amazon Elastic IP,0,28,336.00,USD,""Number of EC2 instances (16), Number of EIPs per instance (1)"""
Reduced_Cost_Estimate,US East (N. Virginia),S3 Standard,0,505.4,6064.80,USD,S3 Standard storage (10000 GB per month)
"Reduced_Cost_Estimate,US East (N. Virginia),Data Transfer,0,0,0.00,USD,"" Inbound (from: Not selected) 0 TB per month "

For a better visualization, please access the link below,,,,,,,
https://calculator.aws/#/estimate?id=039ff3c6f8ab32d7d03a13d601681e41b2d63331


In this scenario, I just changed the database type from db.m5.12xlarge to db.m5.4xlarge. It reduced the cost initial from 8,181.70 USD to 5,623.19 USD. The most costly resource is definitely RDS. 
Another approach I would evaluate is reducing the number of EC2 instances price or having a more long term contract (3 years reserved instances)

Monthly cost: 5.623,19 USD
